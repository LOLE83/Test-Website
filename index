<!DOCTYPE html>
<html>
<head>
    <title>2048 DocDawg <3</title>
    <style>
        .tile {
            width: calc(25% - 20px);
            height: calc(25% - 20px);
            text-align: center;
            background-color: #ccc;
            font-size: 36px;
            font-weight: bold;
            margin: 10px;
            float: left;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #game-container {
            width: 420px;
            height: 420px;
        }
    </style>
</head>
<body>
    <h1>2048 DocDawg <3</h1>
    <div id="game-container"></div>
    <script>
        // Game logic
        var board = [];
        var score = 0;
        var gameContainer = document.getElementById("game-container");

        function initialize() {
            for (var i = 0; i < 4; i++) {
                board[i] = [];
                for (var j = 0; j < 4; j++) {
                    board[i][j] = 0;
                }
            }

            addTile();
            addTile();
            updateBoard();
        }

        function addTile() {
            var emptyTiles = [];
            for (var i = 0; i < 4; i++) {
                for (var j = 0; j < 4; j++) {
                    if (board[i][j] === 0) {
                        emptyTiles.push({ x: i, y: j });
                    }
                }
            }

            if (emptyTiles.length > 0) {
                var randomIndex = Math.floor(Math.random() * emptyTiles.length);
                var randomValue = Math.random() < 0.9 ? 2 : 4;
                var tile = emptyTiles[randomIndex];
                board[tile.x][tile.y] = randomValue;
            }
        }

        function updateBoard() {
            gameContainer.innerHTML = "";

            for (var i = 0; i < 4; i++) {
                for (var j = 0; j < 4; j++) {
                    var tile = document.createElement("div");
                    tile.className = "tile";
                    tile.textContent = board[i][j] === 0 ? "" : board[i][j];
                    tile.style.backgroundColor = getTileColor(board[i][j]);
                    gameContainer.appendChild(tile);
                }
            }
        }

        function getTileColor(value) {
            switch (value) {
                case 2: return "#eee4da";
                case 4: return "#ede0c8";
                case 8: return "#f2b179";
                case 16: return "#f59563";
                case 32: return "#f67c5f";
                case 64: return "#f65e3b";
                case 128: return "#edcf72";
                case 256: return "#edcc61";
                case 512: return "#edc850";
                case 1024: return "#edc53f";
                case 2048: return "#edc22e";
                default: return "#ccc0b3";
            }
        }

        // Handle keyboard events
        document.addEventListener("keydown", function (event) {
            var moved = false;

            switch (event.key) {
                case "ArrowUp":
                    moved = moveUp();
                    break;
                case "ArrowDown":
                    moved = moveDown();
                    break;
                case "ArrowLeft":
                    moved = moveLeft();
                    break;
                case "ArrowRight":
                    moved = moveRight();
                    break;
            }

            if (moved) {
                addTile();
                updateBoard();
                if (isGameOver()) {
                    alert("Game over!");
                }
            }
        });

        function moveUp() {
            var moved = false;

            for (var j = 0; j < 4; j++) {
                for (var i = 1; i < 4; i++) {
                    if (board[i][j] !== 0) {
                        var x = i;
                        while (x > 0 && board[x - 1][j] === 0) {
                            board[x - 1][j] = board[x][j];
                            board[x][j] = 0;
                            x--;
                            moved = true;
                        }
                        if (x > 0 && board[x - 1][j] === board[x][j]) {
                            board[x - 1][j] *= 2;
                            score += board[x - 1][j];
                            board[x][j] = 0;
                            moved = true;
                        }
                    }
                }
            }

            return moved;
        }

        function moveDown() {
            var moved = false;

            for (var j = 0; j < 4; j++) {
                for (var i = 2; i >= 0; i--) {
                    if (board[i][j] !== 0) {
                        var x = i;
                        while (x < 3 && board[x + 1][j] === 0) {
                            board[x + 1][j] = board[x][j];
                            board[x][j] = 0;
                            x++;
                            moved = true;
                        }
                        if (x < 3 && board[x + 1][j] === board[x][j]) {
                            board[x + 1][j] *= 2;
                            score += board[x + 1][j];
                            board[x][j] = 0;
                            moved = true;
                        }
                    }
                }
            }

            return moved;
        }

        function moveLeft() {
            var moved = false;

            for (var i = 0; i < 4; i++) {
                for (var j = 1; j < 4; j++) {
                    if (board[i][j] !== 0) {
                        var y = j;
                        while (y > 0 && board[i][y - 1] === 0) {
                            board[i][y - 1] = board[i][y];
                            board[i][y] = 0;
                            y--;
                            moved = true;
                        }
                        if (y > 0 && board[i][y - 1] === board[i][y]) {
                            board[i][y - 1] *= 2;
                            score += board[i][y - 1];
                            board[i][y] = 0;
                            moved = true;
                        }
                    }
                }
            }

            return moved;
        }

        function moveRight() {
            var moved = false;

            for (var i = 0; i < 4; i++) {
                for (var j = 2; j >= 0; j--) {
                    if (board[i][j] !== 0) {
                        var y = j;
                        while (y < 3 && board[i][y + 1] === 0) {
                            board[i][y + 1] = board[i][y];
                            board[i][y] = 0;
                            y++;
                            moved = true;
                        }
                        if (y < 3 && board[i][y + 1] === board[i][y]) {
                            board[i][y + 1] *= 2;
                            score += board[i][y + 1];
                            board[i][y] = 0;
                            moved = true;
                        }
                    }
                }
            }

            return moved;
        }

        function isGameOver() {
            for (var i = 0; i < 4; i++) {
                for (var j = 0; j < 4; j++) {
                    if (board[i][j] === 0) {
                        return false;
                    }
                    if (i < 3 && board[i][j] === board[i + 1][j]) {
                        return false;
                    }
                    if (j < 3 && board[i][j] === board[i][j + 1]) {
                        return false;
                    }
                }
            }
            return true;
        }

        // Initialize the game
        initialize();
    </script>
</body>
</html>
